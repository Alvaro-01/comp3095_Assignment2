version: '3.8'

services:

  discovery-service:
    image: discovery-service
    ports:
      - "8761:8761"
    build:
      context: ./discovery-service
      dockerfile: ./Dockerfile
    container_name: discovery-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      eureka.client.serviceUrl.defaultZone: http://discovery-service:8761/eureka

    networks:
      - spring

  api-gateway:
    image: api-gateway
    ports:
      - "8181:8181"
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    container_name: api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - spring
    depends_on:
      - discovery-service


  user-service:
    image: user-service
    ports:
      - "8084:8084"
    build:
      context: ./user-service
      dockerfile: ./Dockerfile
    container_name: user-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
      - discovery-service
      - api-gateway
    networks:
      - spring

  comment-service:
    image: comment-service
    ports:
      - "8086:8086"
    build:
      context: ./comment-service
      dockerfile: ./Dockerfile
    container_name: comment-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
      - discovery-service
      - api-gateway
    networks:
      - spring

  post-service:
    image: post-service
    ports:
      - "8082:8082"
    build:
      context: ./post-service
      dockerfile: ./Dockerfile
    container_name: post-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
      - discovery-service
      - api-gateway
    networks:
      - spring

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootadmin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb-gbc
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring


  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootadmin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb-gbc
    container_name: mongo-express-gbc
    restart: unless-stopped
    depends_on:
      - mongodb
    networks:
      - spring

networks:
  spring:
    driver: bridge